```{r setup, include=FALSE}
knitr::opts_knit$set(root.dir = '.')
```

---
title: "TP1 (FAS-1001)"
author: "Claude Alie"
date: "`r as.character(format(Sys.time(), '%d %B %Y'))`"
format: pdf
---

**Note**: Dans les captures d'écran qui suivent, la dernière ligne d'un écran est reprise par l'écran suivant pour assurer qu'ils se suivent.


# 1) Captures d'écran des commandes utilisées (Figures 1 à 3)

![Terminal commands 1](_screenshots/terminal_screenshot_commands_1.png)

![Terminal commands 2](_screenshots/terminal_screenshot_commands_2.png)

![Terminal commands 3](_screenshots/terminal_screenshot_commands_3.png)

### Quelques tâtonnements infructueux avant le vrai départ (Figure 1)

### Création de la branche fas_1001_alie dans mon espace gitHub fas_1001_alie (Figure 1 (fin) et Figure 2).

1) git branch: Utilisé pour savoir quelles branches existe dans le dossier fas_1001_alie de mon espace getHub. Il n'y a que le main.

2) git branch fas_1001_alie. Utilisé pour ajouter la branche fas_1001_alie. Notez que par distraction, j'ai ajouté le mot après fas_100_alie main. La branche a quand même été créee, si bien que lorsque j'ai effectué la commande correctement, on m'a dit qu'elle était déjà créée.

3) git branch: pour vérifier que la branche est créée. Cependant, on est sur la main. Il faut changer de branche.

4) git checkout fas_1001_alie pour se mettre sur fas_1001_alie.

5) git branch (Figure 2): Pour s'assurer que le changement de branche s'est effectué correctement.

### Premier commit: Mise à jour du dossier fas_1001_alie de mon ordi en copiant son contenu dans la branche fas_1001_alie de gitHub après avoir intégré le fichier TP1(FAS-1001).qmd dans le sous-dossier local _tp1.

6) git add . (Figure 2, suite): Pour indiquer dans l'historique quels changements doivent être mis à jour, ici le dossier local fas_1001_alie.

7) git commit: Pour enregistrer ces changements localement dans l'historique sous le nom de Premier commit.

8) git push: Pour transférer ces changements d'historique locaux dans la branche github fas_1001_alie. Un problème s'est cependant produit car la branche n'avait pas de branche ascendante "upstream branch", probablement parce qu'on a créé fas_Ù1001_alie comme une soeur du main. 

9) git push -- set-upstream origin fas_1001_alie. On résout le problème en ajoutant à git push une branche ascendante. Les mises à jour produites par ce push du Premier commit sont décrites: il s'agit essentiellement de création de nouveau contenu, et de processus de compression et décompression.

### Création du document de travail de session: Mise à jour du dossier fas_1001_alie de mon ordi en copiant son contenu dans la branche fas_1001_alie de gitHub après avoir intégré un fichier fas_1001_alie.qmd dans le sous-dossier local _travail_session. 

10) git add . (Figure 3). Localisation du dossier local à mettre à jour.

11) git commit: enregistrement des changements dans l'historique.

12) git push: Reste à faire.


# 2) Captures d'écran du git log (Figures 4 à 8)

Comme on demande tous les premiers pas, je mes premiers clones et les problèmes rencontrés pour brancher mon ordinateur à mon site gitHub. Les captures d'écran obtenus par gitHub tracent l'historique des commits qui ont été effectués. En ce qui concerne ce tp, les changements pertinents se trouvent dans la figure 4. On voit que le 18 janvier à 21: 14 et 21:41 les commits "Premier commit" et "Création du document du travail de session" ont été enregistrés correctement. 

![Git log 1](_screenshots/git_log_1.png)

![Git log 2](_screenshots/git_log_2.png)

![Git log 3](_screenshots/git_log_3.png)

![Git log 4](_screenshots/git_log_4.png)

![Git log 5](_screenshots/git_log_5.png)

